/* tslint:disable */
/* eslint-disable */
/**
 * wiegaaterkoffiehalen OpenAPI
 * wiegaaterkoffiehalen OpenAPI
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  GroupsGroupIdDrinksPostRequest,
} from '../models/index';
import {
    GroupsGroupIdDrinksPostRequestFromJSON,
    GroupsGroupIdDrinksPostRequestToJSON,
} from '../models/index';

export interface GroupsGroupIdDrinksDrinkIdDeleteRequest {
    groupId: string;
    drinkId: string;
    accessToken: string;
}

export interface GroupsGroupIdDrinksDrinkIdPatchRequest {
    groupId: string;
    drinkId: string;
    accessToken: string;
    groupsGroupIdDrinksPostRequest?: GroupsGroupIdDrinksPostRequest;
}

export interface GroupsGroupIdDrinksPostOperationRequest {
    groupId: string;
    accessToken: string;
    groupsGroupIdDrinksPostRequest?: GroupsGroupIdDrinksPostRequest;
}

/**
 * 
 */
export class GroupDrinksApi extends runtime.BaseAPI {

    /**
     * Delete a drink
     */
    async groupsGroupIdDrinksDrinkIdDeleteRaw(requestParameters: GroupsGroupIdDrinksDrinkIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['groupId'] == null) {
            throw new runtime.RequiredError(
                'groupId',
                'Required parameter "groupId" was null or undefined when calling groupsGroupIdDrinksDrinkIdDelete().'
            );
        }

        if (requestParameters['drinkId'] == null) {
            throw new runtime.RequiredError(
                'drinkId',
                'Required parameter "drinkId" was null or undefined when calling groupsGroupIdDrinksDrinkIdDelete().'
            );
        }

        if (requestParameters['accessToken'] == null) {
            throw new runtime.RequiredError(
                'accessToken',
                'Required parameter "accessToken" was null or undefined when calling groupsGroupIdDrinksDrinkIdDelete().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters['accessToken'] != null) {
            headerParameters['access-token'] = String(requestParameters['accessToken']);
        }

        const response = await this.request({
            path: `/groups/{groupId}/drinks/{drinkId}`.replace(`{${"groupId"}}`, encodeURIComponent(String(requestParameters['groupId']))).replace(`{${"drinkId"}}`, encodeURIComponent(String(requestParameters['drinkId']))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Delete a drink
     */
    async groupsGroupIdDrinksDrinkIdDelete(requestParameters: GroupsGroupIdDrinksDrinkIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.groupsGroupIdDrinksDrinkIdDeleteRaw(requestParameters, initOverrides);
    }

    /**
     * Edit a drink
     */
    async groupsGroupIdDrinksDrinkIdPatchRaw(requestParameters: GroupsGroupIdDrinksDrinkIdPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['groupId'] == null) {
            throw new runtime.RequiredError(
                'groupId',
                'Required parameter "groupId" was null or undefined when calling groupsGroupIdDrinksDrinkIdPatch().'
            );
        }

        if (requestParameters['drinkId'] == null) {
            throw new runtime.RequiredError(
                'drinkId',
                'Required parameter "drinkId" was null or undefined when calling groupsGroupIdDrinksDrinkIdPatch().'
            );
        }

        if (requestParameters['accessToken'] == null) {
            throw new runtime.RequiredError(
                'accessToken',
                'Required parameter "accessToken" was null or undefined when calling groupsGroupIdDrinksDrinkIdPatch().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (requestParameters['accessToken'] != null) {
            headerParameters['access-token'] = String(requestParameters['accessToken']);
        }

        const response = await this.request({
            path: `/groups/{groupId}/drinks/{drinkId}`.replace(`{${"groupId"}}`, encodeURIComponent(String(requestParameters['groupId']))).replace(`{${"drinkId"}}`, encodeURIComponent(String(requestParameters['drinkId']))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: GroupsGroupIdDrinksPostRequestToJSON(requestParameters['groupsGroupIdDrinksPostRequest']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Edit a drink
     */
    async groupsGroupIdDrinksDrinkIdPatch(requestParameters: GroupsGroupIdDrinksDrinkIdPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.groupsGroupIdDrinksDrinkIdPatchRaw(requestParameters, initOverrides);
    }

    /**
     * Create a drink
     */
    async groupsGroupIdDrinksPostRaw(requestParameters: GroupsGroupIdDrinksPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['groupId'] == null) {
            throw new runtime.RequiredError(
                'groupId',
                'Required parameter "groupId" was null or undefined when calling groupsGroupIdDrinksPost().'
            );
        }

        if (requestParameters['accessToken'] == null) {
            throw new runtime.RequiredError(
                'accessToken',
                'Required parameter "accessToken" was null or undefined when calling groupsGroupIdDrinksPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (requestParameters['accessToken'] != null) {
            headerParameters['access-token'] = String(requestParameters['accessToken']);
        }

        const response = await this.request({
            path: `/groups/{groupId}/drinks`.replace(`{${"groupId"}}`, encodeURIComponent(String(requestParameters['groupId']))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: GroupsGroupIdDrinksPostRequestToJSON(requestParameters['groupsGroupIdDrinksPostRequest']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Create a drink
     */
    async groupsGroupIdDrinksPost(requestParameters: GroupsGroupIdDrinksPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.groupsGroupIdDrinksPostRaw(requestParameters, initOverrides);
    }

}
