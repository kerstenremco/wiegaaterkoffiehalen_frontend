/* tslint:disable */
/* eslint-disable */
/**
 * wiegaaterkoffiehalen OpenAPI
 * wiegaaterkoffiehalen OpenAPI
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Order } from './Order';
import {
    OrderFromJSON,
    OrderFromJSONTyped,
    OrderToJSON,
} from './Order';
import type { Profile } from './Profile';
import {
    ProfileFromJSON,
    ProfileFromJSONTyped,
    ProfileToJSON,
} from './Profile';

/**
 * 
 * @export
 * @interface Drawing
 */
export interface Drawing {
    /**
     * 
     * @type {string}
     * @memberof Drawing
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Drawing
     */
    group: string;
    /**
     * 
     * @type {string}
     * @memberof Drawing
     */
    start: string;
    /**
     * 
     * @type {string}
     * @memberof Drawing
     */
    end: string;
    /**
     * 
     * @type {Profile}
     * @memberof Drawing
     */
    startedBy: Profile;
    /**
     * 
     * @type {number}
     * @memberof Drawing
     */
    seconds: number;
    /**
     * 
     * @type {boolean}
     * @memberof Drawing
     */
    self: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Drawing
     */
    open: boolean;
    /**
     * 
     * @type {Array<Order>}
     * @memberof Drawing
     */
    orders: Array<Order>;
    /**
     * 
     * @type {number}
     * @memberof Drawing
     */
    endsInSeconds: number;
}

/**
 * Check if a given object implements the Drawing interface.
 */
export function instanceOfDrawing(value: object): value is Drawing {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('group' in value) || value['group'] === undefined) return false;
    if (!('start' in value) || value['start'] === undefined) return false;
    if (!('end' in value) || value['end'] === undefined) return false;
    if (!('startedBy' in value) || value['startedBy'] === undefined) return false;
    if (!('seconds' in value) || value['seconds'] === undefined) return false;
    if (!('self' in value) || value['self'] === undefined) return false;
    if (!('open' in value) || value['open'] === undefined) return false;
    if (!('orders' in value) || value['orders'] === undefined) return false;
    if (!('endsInSeconds' in value) || value['endsInSeconds'] === undefined) return false;
    return true;
}

export function DrawingFromJSON(json: any): Drawing {
    return DrawingFromJSONTyped(json, false);
}

export function DrawingFromJSONTyped(json: any, ignoreDiscriminator: boolean): Drawing {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'group': json['group'],
        'start': json['start'],
        'end': json['end'],
        'startedBy': ProfileFromJSON(json['startedBy']),
        'seconds': json['seconds'],
        'self': json['self'],
        'open': json['open'],
        'orders': ((json['orders'] as Array<any>).map(OrderFromJSON)),
        'endsInSeconds': json['EndsInSeconds'],
    };
}

export function DrawingToJSON(value?: Drawing | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'group': value['group'],
        'start': value['start'],
        'end': value['end'],
        'startedBy': ProfileToJSON(value['startedBy']),
        'seconds': value['seconds'],
        'self': value['self'],
        'open': value['open'],
        'orders': ((value['orders'] as Array<any>).map(OrderToJSON)),
        'EndsInSeconds': value['endsInSeconds'],
    };
}

